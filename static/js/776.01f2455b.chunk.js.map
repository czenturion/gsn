{"version":3,"file":"static/js/776.01f2455b.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/EyeTwoTone.js","../node_modules/@ant-design/icons/es/icons/EyeTwoTone.js","components/Login/LoginForm.tsx","components/Login/Login.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar EyeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M81.8 537.8a60.3 60.3 0 010-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\", \"fill\": primaryColor } }] }; }, \"name\": \"eye\", \"theme\": \"twotone\" };\nexport default EyeTwoTone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport EyeTwoToneSvg from \"@ant-design/icons-svg/es/asn/EyeTwoTone\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar EyeTwoTone = function EyeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: EyeTwoToneSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  EyeTwoTone.displayName = 'EyeTwoTone';\n}\nexport default /*#__PURE__*/React.forwardRef(EyeTwoTone);","import {FC, useEffect} from \"react\"\r\nimport {Controller, SubmitHandler, useForm, UseFormSetError} from \"react-hook-form\"\r\nimport {Button, Checkbox, Form, Input, Typography} from \"antd\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport {EyeInvisibleOutlined, EyeTwoTone} from \"@ant-design/icons\"\r\nimport * as React from \"react\"\r\n\r\nconst {Item} = Form\r\nconst {Text} = Typography\r\n\r\n\r\ntype LoginFormPropsType = {\r\n    captcha: string\r\n    isFetching: boolean\r\n    logIn: (formData: FormValues, setError: UseFormSetError<FormValues>) => void\r\n}\r\n\r\nexport type FormValues = {\r\n    serverResponse?: string[]\r\n    email: string\r\n    password: string\r\n    captcha: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: FC<LoginFormPropsType> = ({logIn, captcha, isFetching}) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        setError,\r\n        clearErrors,\r\n        control,\r\n        formState: {\r\n            errors\r\n        }\r\n    } = useForm<FormValues>({\r\n        defaultValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            captcha: \"\",\r\n            rememberMe: false\r\n        }\r\n    })\r\n\r\n    const [form] = Form.useForm()\r\n    const rules = {required: true}\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = (formData) => {\r\n        logIn(formData, setError)\r\n    }\r\n\r\n    const clearErrorsForm = () => {\r\n        if (errors && errors.serverResponse && errors.serverResponse.message!.length > 0) {\r\n            clearErrors(\"serverResponse\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                gap: \"16px\",\r\n                width: \"200px\"\r\n            }}\r\n            onFinish={handleSubmit(onSubmit)}\r\n            form={form}\r\n        >\r\n            <Item\r\n                validateStatus={errors?.serverResponse?.message ? \"error\" : \"\"}\r\n            >\r\n                <Controller\r\n                    name={\"email\"}\r\n                    control={control}\r\n                    rules={rules}\r\n                    render={({field}) =>\r\n                        <Input\r\n                            placeholder={\"Email\"}\r\n                            {...field}\r\n                            onFocus={clearErrorsForm}\r\n                        />\r\n                    }\r\n                />\r\n            </Item>\r\n            <Item\r\n                validateStatus={errors?.serverResponse?.message ? \"error\" : \"\"}\r\n            >\r\n                <Controller\r\n                    rules={rules}\r\n                    name={\"password\"}\r\n                    control={control}\r\n                    render={({field}) =>\r\n                        <Input.Password\r\n                            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                            placeholder={\"Password\"}\r\n                            {...field}\r\n                            onFocus={clearErrorsForm}\r\n                        />\r\n                    }\r\n                />\r\n            </Item>\r\n            {\r\n                errors?.serverResponse?.message\r\n                    ? <p\r\n                        style={{\r\n                            color: \"red\",\r\n                            opacity: 1,\r\n                            transition: \"opacity 0.5s ease-in-out\"\r\n                        }}\r\n                    >\r\n                        {errors.serverResponse.message}\r\n                    </p>\r\n                    : \"\"\r\n            }\r\n            <Item>\r\n                <Controller\r\n                    name=\"rememberMe\"\r\n                    control={control}\r\n                    render={({field}) =>\r\n                        <Checkbox\r\n                            {...field}\r\n                        >\r\n                            Remember Me\r\n                        </Checkbox>\r\n                    }\r\n                />\r\n            </Item>\r\n            {\r\n                captcha\r\n                    ? <Item>\r\n                        <img src={captcha} alt=\"captcha\"/>\r\n                        <Controller\r\n                            rules={rules}\r\n                            name=\"captcha\"\r\n                            control={control}\r\n                            render={({field}) =>\r\n                                <Input\r\n                                    {...field}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Item>\r\n                    : <></>\r\n            }\r\n            <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                    width: \"100%\"\r\n                }}\r\n            >\r\n                Login\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import {UseFormSetError} from \"react-hook-form\"\nimport {InitialAuthStateType, logIn} from \"../../redux/auth-reducer\"\nimport {connect} from \"react-redux\"\nimport * as React from \"react\"\nimport {FC} from \"react\"\nimport {Navigate} from \"react-router-dom\"\nimport {AppStateType} from \"../../redux/redux-store\"\nimport {Form, Typography} from \"antd\"\nimport LoginForm from \"./LoginForm\";\n\nconst {Title} = Typography\n\nexport type FormValues = {\n    serverResponse?: string[]\n    email: string\n    password: string\n    captcha: string\n    rememberMe: boolean\n}\n\ntype LoginPropsType = {\n    auth: InitialAuthStateType\n}\n\ntype LoginDispatchType = {\n    logIn: (formData: FormValues, setError: UseFormSetError<FormValues>) => void\n}\n\ntype LoginPropsAndDispatchType = LoginPropsType & LoginDispatchType\n\nconst Login: FC<LoginPropsAndDispatchType> = ({auth, logIn}) => {\n    return <div>\n        {\n            !auth.isAuth\n                ? <div\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        flexDirection: \"column\",\n                        textAlign: \"center\"\n                    }}\n                >\n                    <Title\n                        level={3}\n                        style={{marginTop: \"60px\"}}\n                    >\n                        LOGIN\n                    </Title>\n                    <br/>\n                    <br/>\n                    <LoginForm\n                        logIn={logIn}\n                        captcha={auth.captcha}\n                        isFetching={auth.isFetching}\n                    />\n                </div>\n                : <Navigate to=\"/profile\"/>\n        }\n    </div>\n}\n\nlet mapStateToProps = (state: AppStateType): LoginPropsType => ({\n        auth: state.auth\n    }\n)\n\nexport default connect<\n    LoginPropsType,\n    LoginDispatchType,\n    {},\n    AppStateType\n    >(mapStateToProps, {logIn})(Login)"],"names":["primaryColor","secondaryColor","EyeTwoTone","props","ref","React","AntdIcon","_extends","icon","EyeTwoToneSvg","Item","Form","Typography","Text","_ref","_errors$serverRespons","_errors$serverRespons2","_errors$serverRespons3","logIn","captcha","_useForm","isFetching","useForm","defaultValues","email","password","rememberMe","handleSubmit","register","setError","reset","clearErrors","control","errors","formState","_Form$useForm","form","_slicedToArray","rules","required","clearErrorsForm","serverResponse","message","length","_jsxs","style","display","flexDirection","gap","width","onFinish","formData","children","_jsx","validateStatus","Controller","name","render","_ref2","field","Input","_objectSpread","placeholder","onFocus","_ref3","Password","iconRender","visible","EyeInvisibleOutlined","color","opacity","transition","_ref4","Checkbox","src","alt","_ref5","_Fragment","Button","type","htmlType","Title","connect","state","auth","isAuth","Navigate","to","alignItems","textAlign","level","marginTop","LoginForm"],"sourceRoot":""}