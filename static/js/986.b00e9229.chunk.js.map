{"version":3,"file":"static/js/986.b00e9229.chunk.js","mappings":"iMACA,EAA+B,4BAA/B,EAAuS,uB,yFCCvS,EADiB,CAAE,KAAQ,SAAgBA,EAAcC,GAAkB,MAAO,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uLAAwL,KAAQA,IAAoB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uNAAwN,KAAQA,IAAoB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,iTAAkT,KAAQD,IAAkB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2KAA4K,KAAQA,KAAqB,EAAG,KAAQ,MAAO,MAAS,W,UCMtyCE,EAAa,SAAoBC,EAAOC,GAC1C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CACpEC,IAAKA,EACLI,KAAMC,IAEV,EAIA,MAA4BJ,EAAAA,WAAiBH,G,mBCFtCQ,EAASC,EAAAA,EAATD,MACAE,EAAQC,EAAAA,EAARD,KAgBDE,EAAoC,SAAHC,GAAsC,IAADC,EAAAC,EAAAC,EAAhCC,EAAKJ,EAALI,MAAOC,EAAOL,EAAPK,QAASC,EAAUN,EAAVM,WACxDC,GAUIC,EAAAA,EAAAA,IAAoB,CACpBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVN,QAAS,GACTO,YAAY,KAbhBC,GADQN,EAARO,SACYP,EAAZM,cAEAE,GADKR,EAALS,MACQT,EAARQ,UACAE,EAAWV,EAAXU,YACAC,EAAOX,EAAPW,QAEIC,EAAMZ,EADVa,UACID,OAWRE,EAAevB,EAAAA,EAAKU,UAAbc,GAAsBC,EAAAA,EAAAA,GAAAF,EAAA,GAAlB,IAOXG,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAIP,EAAQ,eAChBA,EAAOQ,gBACPF,QAAQC,IAAIP,EAAOQ,eAAgB,OAE3C,GAAG,CAACR,IAIJ,IAAMS,EAAkB,WAChBT,GAAUA,EAAOQ,gBAAkBR,EAAOQ,eAAeE,QAASC,OAAS,GAC3Eb,EAAY,iBAEpB,EAEA,OAAIX,GAAmByB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KAG7BC,EAAAA,EAAAA,MAACnC,EAAAA,EAAI,CACDoC,MAAO,CACHC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,UAAW,UAEfC,SAAU1B,GA9B0B,SAAC2B,GACzCpC,EAAMoC,EAAUzB,EAEpB,IA4BQO,KAAMA,EAAKmB,SAAA,EAEXV,EAAAA,EAAAA,KAAClC,EAAI,CAAA4C,UACDV,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACPC,KAAM,QACNzB,QAASA,EACT0B,OAAQ,SAAAC,GAAA,IAAEC,EAAKD,EAALC,MAAK,OACXf,EAAAA,EAAAA,KAACgB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACFC,YAAa,SACTH,GAAK,IACTI,QAAStB,IACX,OAIdG,EAAAA,EAAAA,KAAClC,EAAI,CAAA4C,UACDV,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACPC,KAAM,WACNzB,QAASA,EACT0B,OAAQ,SAAAO,GAAA,IAAEL,EAAKK,EAALL,MAAK,OACXf,EAAAA,EAAAA,KAACgB,EAAAA,EAAMK,UAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACXK,WAAY,SAACC,GAAO,OAAMA,GAAUvB,EAAAA,EAAAA,KAAC5C,EAAU,KAAM4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAoB,GAAG,EAC7EN,YAAa,YACTH,GAAK,IACTI,QAAStB,IACX,MAKJ,OAANT,QAAM,IAANA,GAAsB,QAAhBlB,EAANkB,EAAQQ,sBAAc,IAAA1B,GAAtBA,EAAwB4B,SAClBE,EAAAA,EAAAA,KAAA,KAAGG,MAAO,CAACsB,MAAO,OAAOf,SAAEtB,EAAOQ,eAAeE,WACjDE,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,KAEV1B,EAAAA,EAAAA,KAAClC,EAAI,CACD6D,eAAsB,OAANvC,QAAM,IAANA,GAAsB,QAAhBjB,EAANiB,EAAQQ,sBAAc,IAAAzB,GAAtBA,EAAwB2B,QAAU,QAAU,GAC5D8B,KAAY,OAANxC,QAAM,IAANA,GAAsB,QAAhBhB,EAANgB,EAAQQ,sBAAc,IAAAxB,GAAtBA,EAAwB0B,QAAU,6BAA+B,GAAGY,UAC1EV,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACPC,KAAK,aACLzB,QAASA,EACT0B,OAAQ,SAAAgB,GAAA,IAAEd,EAAKc,EAALd,MAAK,OACXf,EAAAA,EAAAA,KAAC8B,EAAAA,GAAQb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IAAAL,SACZ,gBAEU,OAIvBV,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,CACHC,KAAK,UACLC,SAAS,SACT9B,MAAO,CAAC+B,MAAO,QAAQxB,SAC1B,UAIGpC,GACM4B,EAAAA,EAAAA,MAAA,OAAKiC,UAAWC,EAAU1B,SAAA,EACxBV,EAAAA,EAAAA,KAAA,OAAKqC,IAAK/D,EAASgE,IAAI,aACvBtC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACFgB,KAAK,aAGXhC,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,MAItB,EAgCA,GAAea,EAAAA,EAAAA,KALO,SAACC,GAAmB,MAAsB,CACxDC,KAAMD,EAAMC,KACf,GAGwF,CAACpE,MAAAA,EAAAA,IAA9F,EApB6C,SAAHqE,GAAuB,IAAlBD,EAAIC,EAAJD,KAAMpE,EAAKqE,EAALrE,MACjD,OAAO2B,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,CAAAhB,SAEE+B,EAAKE,QAOA3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAQ,CAACC,GAAG,cANb3C,EAAAA,EAAAA,MAAA,OAAKiC,UAAWC,EAAe1B,SAAA,EAC7BV,EAAAA,EAAAA,KAACpC,EAAK,CAACkF,MAAO,EAAEpC,SAAC,WACjBV,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAChC,EAAS,CAACK,MAAOA,EAAOC,QAASmE,EAAKnE,QAASC,WAAYkE,EAAKlE,iBAKrF,G","sources":["webpack://gsn/./src/components/Login/Login.module.css?3530","../node_modules/@ant-design/icons-svg/es/asn/EyeTwoTone.js","../node_modules/@ant-design/icons/es/icons/EyeTwoTone.js","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logFormInput\":\"Login_logFormInput__YmWHv\",\"logForm\":\"Login_logForm__-5Xrv\",\"logInput\":\"Login_logInput__toAZI\",\"rememberMe\":\"Login_rememberMe__pzUev\",\"submit\":\"Login_submit__cSdEP\",\"logOutBtn\":\"Login_logOutBtn__R0zIa\",\"errorEmptyString\":\"Login_errorEmptyString__JGP-K\",\"captcha\":\"Login_captcha__+56Kx\"};","// This icon file is generated automatically.\nvar EyeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M81.8 537.8a60.3 60.3 0 010-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\", \"fill\": primaryColor } }] }; }, \"name\": \"eye\", \"theme\": \"twotone\" };\nexport default EyeTwoTone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport EyeTwoToneSvg from \"@ant-design/icons-svg/es/asn/EyeTwoTone\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar EyeTwoTone = function EyeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: EyeTwoToneSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  EyeTwoTone.displayName = 'EyeTwoTone';\n}\nexport default /*#__PURE__*/React.forwardRef(EyeTwoTone);","import {useForm, UseFormSetError, Controller} from \"react-hook-form\"\nimport type {SubmitHandler} from \"react-hook-form\"\nimport {InitialAuthStateType, logIn} from \"../../redux/auth-reducer\"\nimport {connect} from \"react-redux\"\nimport s from \"./Login.module.css\"\nimport * as React from \"react\"\nimport {Navigate} from \"react-router-dom\"\nimport {FC, useEffect} from \"react\"\nimport {AppStateType} from \"../../redux/redux-store\"\nimport Preloader from \"../common/Preloader/Preloader\"\nimport {Button, Checkbox, Form, Input} from \"antd\"\nimport {Typography} from \"antd\"\nimport {EyeInvisibleOutlined, EyeTwoTone} from \"@ant-design/icons\";\n\nconst {Title} = Typography\nconst {Item} = Form\n\nexport type FormValues = {\n    serverResponse?: string[]\n    email: string\n    password: string\n    captcha: string\n    rememberMe: boolean\n}\n\ntype LoginFormPropsType = {\n    captcha: string\n    isFetching: boolean\n    logIn: (formData: FormValues, setError: UseFormSetError<FormValues>) => void\n}\n\nconst LoginForm: FC<LoginFormPropsType> = ({logIn, captcha, isFetching}) => {\n    const {\n        register,\n        handleSubmit,\n        reset,\n        setError,\n        clearErrors,\n        control,\n        formState: {\n            errors\n        }\n    } = useForm<FormValues>({\n        defaultValues: {\n            email: \"\",\n            password: \"\",\n            captcha: \"\",\n            rememberMe: false\n        }\n    })\n\n    const [form] = Form.useForm()\n\n    const onSubmit: SubmitHandler<FormValues> = (formData) => {\n        logIn(formData, setError)\n        // return <Navigate to=\"/profile/\"/>\n    }\n\n    useEffect(() => {\n        console.log(errors, \"form errors\")\n        if (errors.serverResponse) {\n            console.log(errors.serverResponse, \"++++\")\n        }\n    }, [errors])\n\n\n\n    const clearErrorsForm = () => {\n        if (errors && errors.serverResponse && errors.serverResponse.message!.length > 0) {\n            clearErrors(\"serverResponse\")\n        }\n    }\n\n    if (isFetching) return <Preloader/>\n\n    return (\n        <Form\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"16px\",\n                textAlign: \"center\"\n            }}\n            onFinish={handleSubmit(onSubmit)}\n            form={form}\n        >\n            <Item>\n                <Controller\n                    name={\"email\"}\n                    control={control}\n                    render={({field}) =>\n                        <Input\n                            placeholder={\"Email\"}\n                            {...field}\n                            onFocus={clearErrorsForm}\n                        />\n                    }\n                />\n            </Item>\n            <Item>\n                <Controller\n                    name={\"password\"}\n                    control={control}\n                    render={({field}) =>\n                        <Input.Password\n                            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                            placeholder={\"Password\"}\n                            {...field}\n                            onFocus={clearErrorsForm}\n                        />\n                    }\n                />\n            </Item>\n            {\n                errors?.serverResponse?.message\n                    ? <p style={{color: \"red\"}}>{errors.serverResponse.message}</p>\n                    : <></>\n            }\n            <Item\n                validateStatus={errors?.serverResponse?.message ? \"error\" : \"\"}\n                help={errors?.serverResponse?.message ? \"Email or Password is wrong\" : \"\"}>\n                <Controller\n                    name=\"rememberMe\"\n                    control={control}\n                    render={({field}) =>\n                        <Checkbox\n                            {...field}\n                        >\n                            Remember Me\n                        </Checkbox>\n                    }\n                />\n            </Item>\n            <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{width: \"100%\"}}\n            >\n                Login\n            </Button>\n            {\n                captcha\n                    ? <div className={s.captcha}>\n                        <img src={captcha} alt=\"captcha\"/>\n                        <Input\n                            type=\"text\"\n                        />\n                    </div>\n                    : <></>\n            }\n        </Form>\n    )\n}\n\ntype LoginPropsType = {\n    auth: InitialAuthStateType\n}\n\ntype LoginDispatchType = {\n    logIn: (formData: FormValues, setError: UseFormSetError<FormValues>) => void\n}\n\ntype LoginPropsAndDispatchType = LoginPropsType & LoginDispatchType\n\nconst Login: FC<LoginPropsAndDispatchType> = ({auth, logIn}) => {\n    return <>\n        {\n            !auth.isAuth\n                ? <div className={s.logFormInput}>\n                    <Title level={3}>LOGIN</Title>\n                    <br/>\n                    <br/>\n                    <LoginForm logIn={logIn} captcha={auth.captcha} isFetching={auth.isFetching}/>\n                </div>\n                : <Navigate to=\"/profile\"/>\n        }\n    </>\n}\n\nlet mapStateToProps = (state: AppStateType): LoginPropsType => ({\n        auth: state.auth\n    }\n)\n\nexport default connect<LoginPropsType, LoginDispatchType, {}, AppStateType>(mapStateToProps, {logIn})(Login)"],"names":["primaryColor","secondaryColor","EyeTwoTone","props","ref","React","AntdIcon","_extends","icon","EyeTwoToneSvg","Title","Typography","Item","Form","LoginForm","_ref","_errors$serverRespons","_errors$serverRespons2","_errors$serverRespons3","logIn","captcha","isFetching","_useForm","useForm","defaultValues","email","password","rememberMe","handleSubmit","register","setError","reset","clearErrors","control","errors","formState","_Form$useForm","form","_slicedToArray","useEffect","console","log","serverResponse","clearErrorsForm","message","length","_jsx","Preloader","_jsxs","style","display","flexDirection","gap","textAlign","onFinish","formData","children","Controller","name","render","_ref2","field","Input","_objectSpread","placeholder","onFocus","_ref3","Password","iconRender","visible","EyeInvisibleOutlined","color","_Fragment","validateStatus","help","_ref4","Checkbox","Button","type","htmlType","width","className","s","src","alt","connect","state","auth","_ref5","isAuth","Navigate","to","level"],"sourceRoot":""}